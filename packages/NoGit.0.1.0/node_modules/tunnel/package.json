{
  "_args": [
    [
      "tunnel@https://github.com/whyleee/node-tunnel/tarball/node-0.12-fix",
      "C:\\temp\\forpg\\node_modules\\global-tunnel"
    ]
  ],
  "_from": "https://github.com/whyleee/node-tunnel/tarball/node-0.12-fix",
  "_id": "tunnel@0.0.3",
  "_inCache": true,
  "_location": "/tunnel",
  "_phantomChildren": {},
  "_requested": {
    "name": "tunnel",
    "raw": "tunnel@https://github.com/whyleee/node-tunnel/tarball/node-0.12-fix",
    "rawSpec": "https://github.com/whyleee/node-tunnel/tarball/node-0.12-fix",
    "scope": null,
    "spec": "https://github.com/whyleee/node-tunnel/tarball/node-0.12-fix",
    "type": "remote"
  },
  "_requiredBy": [
    "/global-tunnel"
  ],
  "_resolved": "https://github.com/whyleee/node-tunnel/tarball/node-0.12-fix",
  "_shasum": "c6724ca7783c933e802122831bce4156d5472ec3",
  "_shrinkwrap": null,
  "_spec": "tunnel@https://github.com/whyleee/node-tunnel/tarball/node-0.12-fix",
  "_where": "C:\\temp\\forpg\\node_modules\\global-tunnel",
  "author": {
    "email": "koichik@improvement.jp",
    "name": "Koichi Kobayashi"
  },
  "bugs": {
    "url": "https://github.com/koichik/node-tunnel/issues"
  },
  "dependencies": {},
  "description": "Node HTTP/HTTPS Agents for tunneling proxies",
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "engines": {
    "node": ">=0.6.11 <=0.7.0 || >=0.7.3"
  },
  "homepage": "https://github.com/koichik/node-tunnel/",
  "installable": true,
  "keywords": [
    "agent",
    "http",
    "https",
    "proxy"
  ],
  "licenses": {
    "type": "The MIT License",
    "url": "http://www.opensource.org/licenses/mit-license.php"
  },
  "main": "./index.js",
  "name": "tunnel",
  "optionalDependencies": {},
  "readme": "# node-tunnel - HTTP/HTTPS Agents for tunneling proxies\n\n## Example\n\n```javascript\nvar tunnel = require('tunnel');\n\nvar tunnelingAgent = tunnel.httpsOverHttp({\n  proxy: {\n    host: 'localhost',\n    port: 3128\n  }\n});\n\nvar req = https.request({\n  host: 'example.com',\n  port: 443,\n  agent: tunnelingAgent\n});\n```\n\n## Installation\n\n    $ npm install tunnel\n\n## Usages\n\n### HTTP over HTTP tunneling\n\n```javascript\nvar tunnelingAgent = tunnel.httpOverHttp({\n  maxSockets: poolSize, // Defaults to 5\n\n  proxy: { // Proxy settings\n    host: proxyHost, // Defaults to 'localhost'\n    port: proxyPort, // Defaults to 80\n    localAddress: localAddress, // Local interface if necessary\n\n    // Basic authorization for proxy server if necessary\n    proxyAuth: 'user:password',\n\n    // Header fields for proxy server if necessary\n    headers: {\n      'User-Agent': 'Node'\n    }\n  }\n});\n\nvar req = http.request({\n  host: 'example.com',\n  port: 80,\n  agent: tunnelingAgent\n});\n```\n\n### HTTPS over HTTP tunneling\n\n```javascript\nvar tunnelingAgent = tunnel.httpsOverHttp({\n  maxSockets: poolSize, // Defaults to 5\n\n  // CA for origin server if necessary\n  ca: [ fs.readFileSync('origin-server-ca.pem')],\n\n  // Client certification for origin server if necessary\n  key: fs.readFileSync('origin-server-key.pem'),\n  cert: fs.readFileSync('origin-server-cert.pem'),\n\n  proxy: { // Proxy settings\n    host: proxyHost, // Defaults to 'localhost'\n    port: proxyPort, // Defaults to 80\n    localAddress: localAddress, // Local interface if necessary\n\n    // Basic authorization for proxy server if necessary\n    proxyAuth: 'user:password',\n\n    // Header fields for proxy server if necessary\n    headers: {\n      'User-Agent': 'Node'\n    },\n  }\n});\n\nvar req = https.request({\n  host: 'example.com',\n  port: 443,\n  agent: tunnelingAgent\n});\n```\n\n### HTTP over HTTPS tunneling\n\n```javascript\nvar tunnelingAgent = tunnel.httpOverHttps({\n  maxSockets: poolSize, // Defaults to 5\n\n  proxy: { // Proxy settings\n    host: proxyHost, // Defaults to 'localhost'\n    port: proxyPort, // Defaults to 443\n    localAddress: localAddress, // Local interface if necessary\n\n    // Basic authorization for proxy server if necessary\n    proxyAuth: 'user:password',\n\n    // Header fields for proxy server if necessary\n    headers: {\n      'User-Agent': 'Node'\n    },\n\n    // CA for proxy server if necessary\n    ca: [ fs.readFileSync('origin-server-ca.pem')],\n\n    // Server name for verification if necessary\n    servername: 'example.com',\n\n    // Client certification for proxy server if necessary\n    key: fs.readFileSync('origin-server-key.pem'),\n    cert: fs.readFileSync('origin-server-cert.pem'),\n  }\n});\n\nvar req = http.request({\n  host: 'example.com',\n  port: 80,\n  agent: tunnelingAgent\n});\n```\n\n### HTTPS over HTTPS tunneling\n\n```javascript\nvar tunnelingAgent = tunnel.httpsOverHttps({\n  maxSockets: poolSize, // Defaults to 5\n\n  // CA for origin server if necessary\n  ca: [ fs.readFileSync('origin-server-ca.pem')],\n\n  // Client certification for origin server if necessary\n  key: fs.readFileSync('origin-server-key.pem'),\n  cert: fs.readFileSync('origin-server-cert.pem'),\n\n  proxy: { // Proxy settings\n    host: proxyHost, // Defaults to 'localhost'\n    port: proxyPort, // Defaults to 443\n    localAddress: localAddress, // Local interface if necessary\n\n    // Basic authorization for proxy server if necessary\n    proxyAuth: 'user:password',\n\n    // Header fields for proxy server if necessary\n    headers: {\n      'User-Agent': 'Node'\n    }\n\n    // CA for proxy server if necessary\n    ca: [ fs.readFileSync('origin-server-ca.pem')],\n\n    // Server name for verification if necessary\n    servername: 'example.com',\n\n    // Client certification for proxy server if necessary\n    key: fs.readFileSync('origin-server-key.pem'),\n    cert: fs.readFileSync('origin-server-cert.pem'),\n  }\n});\n\nvar req = https.request({\n  host: 'example.com',\n  port: 443,\n  agent: tunnelingAgent\n});\n```\n\n## License\n\nThis module is released under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/koichik/node-tunnel.git"
  },
  "scripts": {
    "test": "./node_modules/mocha/bin/mocha"
  },
  "version": "0.0.3"
}
